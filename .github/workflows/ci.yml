name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
    - master
    - main
    - develop
  release:
    types:
      - published

jobs:
  checks:
    name: Check Python ${{ matrix.python-version }} on ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.11"]
        runs-on: [ubuntu-latest, macos-latest, windows-latest]

        include:
        - python-version: pypy-3.8
          runs-on: ubuntu-latest
        - python-version: "3.6"
          runs-on: ubuntu-20.04
        exclude:
        - python-version: "3.6"
          runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install package
      run: python -m pip install .[test]

    - name: Test
      run: python -m pytest -ra

  root:
    name: ROOT test
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: conda-incubator/setup-miniconda@v2
      with:
        miniforge-variant: Mambaforge
        use-mamba: true
        environment-file: environment.yml

    - name: Install package
      run: pip install .

    - name: Test root
      run: pytest -ra tests/test_root.py



  dist:
    name: Distribution build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Build sdist and wheel
      run: pipx run build

    - uses: actions/upload-artifact@v3
      with:
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.6.4
      if: github.event_name == 'release' && github.event.action == 'published'
      with:
        password: ${{ secrets.pypi_password }}
